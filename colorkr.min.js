export function initColorPicker(selector){async function loadColors(){try{const colors=await(await fetch("./data.json")).json();const colorDiv=document.getElementById(`${selector}`);const pickContainer=document.createElement("div");pickContainer.classList.add("pick-container");const colorPicker=document.createElement("div");colorPicker.classList.add("color-picker");colorPicker.title="Text Color";const colorOptions=document.createElement("div");colorOptions.id="color-options";const arrow=document.createElement("div");arrow.classList.add("arrow");arrow.classList.add("arrow-bottom-center");colorOptions.appendChild(arrow);colors.forEach((colorObj=>{const colorOption=document.createElement("div");colorOption.classList.add("color-option");colorOption.style.backgroundColor=colorObj.color;colorOption.setAttribute("data-color",colorObj.color);const tooltip=document.createElement("span");tooltip.classList.add("tooltip");tooltip.textContent=colorObj.color;colorOption.appendChild(tooltip);colorOptions.appendChild(colorOption)}));colorPicker.appendChild(colorOptions);pickContainer.appendChild(colorPicker);colorDiv.appendChild(pickContainer);addColorPickerListeners()}catch(error){console.error("Error loading colors:",error)}}function addDynamicStyles(){const style=document.createElement("style");style.textContent=`\n        .pick-container {\n            display: flex;\n            gap: 30px;\n            position: relative;\n        }\n        \n        .color-picker {\n            display: flex;\n            align-items: center;\n            position: relative;\n            height: 40px;\n        }\n        \n        #color-options {\n            display: grid;\n            grid-template-columns: repeat(6, 1fr);\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            z-index: 10;\n            background-color: white;\n            border: 1px solid #d3d1d1;\n            border-radius: 5px;\n            padding: 5px;\n        }\n        \n        .arrow {\n            position: absolute;\n            top: -9px;\n            left: 8px;\n            width: 0;\n            height: 0;\n            border-left: 8px solid transparent;\n            border-right: 8px solid transparent;\n            border-bottom: 10px solid #d3d1d1;\n        }\n        \n        .color-option {\n            width: 30px;\n            height: 30px;\n            cursor: pointer;\n            border-radius: 0px;\n            border: 1px solid rgba(0, 0, 0, 0);\n            transition: border 0.2s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n            box-sizing: border-box;\n            margin: 0;\n        }\n        \n        .color-option:hover {\n            border: 4px solid rgb(254, 254, 254);\n        }\n        \n        .tooltip {\n            visibility: hidden;\n            background-color: #333;\n            color: #fff;\n            text-align: center;\n            border-radius: 4px;\n            padding: 5px;\n            position: absolute;\n            z-index: 100;\n            bottom: 85px;\n            left: 14%;\n            transform: translateX(-50%);\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .color-option:hover .tooltip {\n            visibility: visible;\n            opacity: 1;\n        }\n        \n        .arrow-bottom-center {\n            top: 70px;\n            left: 87px;\n            transform: rotate(180deg);\n        }\n    `;document.head.appendChild(style)}function toggleColorOptions(){const colorOptions=document.getElementById("color-options");const arrow=document.querySelector(".arrow");colorOptions.classList.toggle("show");if(colorOptions.classList.contains("show")){arrow.style.display="block"}else{arrow.style.display="none"}}function addColorPickerListeners(){const colorOptions=document.getElementById("color-options");const arrow=document.querySelector(".arrow");document.addEventListener("click",(event=>{if(event.target.closest(".color-picker")){toggleColorOptions()}else{colorOptions.classList.remove("show");arrow.style.display="none"}}));colorOptions.addEventListener("click",(e=>{if(e.target.classList.contains("color-option")){const selectedColor=e.target.getAttribute("data-color");const textarea=document.getElementById("text-area");const{selectionStart:start,selectionEnd:end}=textarea;const selectedText=textarea.value.substring(start,end);if(selectedText){const beforeText=textarea.value.substring(0,start);const afterText=textarea.value.substring(end);textarea.value=beforeText+`[color=${selectedColor}]${selectedText}[/color]`+afterText}}}))}addDynamicStyles();loadColors()}